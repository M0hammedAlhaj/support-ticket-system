services:
  mongo:
    image: mongo:6
    container_name: mongo
    env_file: ./user-service/.env
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  postgres:
    image: postgres:15-alpine
    env_file: ./ticket-service/.env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    ports:
      - "5672:5672"
      - "15672:15672"  
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  user-service:
    build: 
      context: ./user-service
      dockerfile: Dockerfile
    env_file: ./user-service/.env
    ports:
      - "8082:8082"   # HTTP
      - "9090:9090"   # gRPC
    depends_on:
      - mongo
      - rabbitmq

  ticket-service:
    build: 
      context: ./ticket-service
      dockerfile: Dockerfile
    env_file: ./ticket-service/.env
    ports:
      - "8083:8083"
    depends_on:
      - postgres
      - rabbitmq

  gateway-service:
    build: 
      context: ./gateway-service
      dockerfile: Dockerfile
    env_file: ./gateway-service/.env
    ports:
      - "8080:8080"
      - "9091:9090"   # gRPC
    depends_on:
      - user-service
      - ticket-service
      - auth-service
      - rabbitmq

  auth-service:
    build: 
      context: ./auth-service
      dockerfile: Dockerfile
    env_file: ./auth-service/.env
    ports:
      - "8081:8081"
      - "9092:9090"
    depends_on:
      - rabbitmq

volumes:
  mongo_data:
  pgdata:
  rabbitmq_data:
